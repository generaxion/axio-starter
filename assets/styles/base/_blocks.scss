/* ==========================================================================
 # Blocks
========================================================================== */
@import "../utils";

/* Only front-end
----------------------------------------------- */

.blocks {
  @include clearfix;
  @include child-margin-reset;
  padding-left:  var(--spacing-m);
  padding-right: var(--spacing-m);

  & > :first-child,
  & > .is-first-block {
    @include spacing-l(margin-top);
		// sdm should this be moved to module?
		.has-no-hero-background & {@include spacing-m(margin-top);}
  }

  & > :last-child,
  & > .is-last-block {
    @include spacing-l(margin-bottom);
  }

  // each block takes care of its own width
	// sdm - all __inner-container blocks. e.g. .wp-block-cover__inner-container, .wp-block-group__inner-container
	[class*='__inner-container'] > *,
  & > *,
  .inner-blocks > *,
  .block-editor-block-list__layout > * {
    @include spacing(margin-top, margin-bottom);
    margin-left:  auto;
    margin-right: auto;
    max-width: var(--width-content-m);
		//sdm
		&.is-style-subheading {@include negative-spacing(margin-top);}
  }

  .alignfull {
    @include alignfull;
    @include spacing-l(margin-top, margin-bottom);
		//sdm
		&.is-style-subheading {@include negative-spacing-l(margin-top);}
  }

  .alignwide {
    @include alignwide;
    @include spacing-m(margin-top, margin-bottom);
		//sdm
		&.is-style-subheading {@include negative-spacing-m(margin-top);}
    &.is-first-block {
      @include spacing-l(margin-top);
    }
    &.is-last-block {
      @include spacing-l(margin-bottom);
    }
  }

  // float left tweaks
  .alignleft {
    @include breakpoint($breakpoint-sub-m) {
      float: none;
      margin-left: auto;
      margin-right: auto;
    }
  }

  // float right tweaks
  .alignright {
    @include breakpoint($breakpoint-sub-m) {
      float: none;
      margin-left: auto;
      margin-right: auto;
    }
  }

	// sdm - clearfix so margin-bottom is respected withing container not it's parent
	[class*='__inner-container'] {
		display: flow-root;
	}

}
